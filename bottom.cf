body file control
{
    inputs => { "$(sys.libdir)/stdlib.cf", "$(sys.libdir)/vcs.cf" };
}

body contain in_tom
{
    useshell => "useshell";
    # exec_owner => "tom";
    chdir => "$(tom_update.tom_dir)";
}

bundle agent tom_init
{
    files:
        "/home/tom/."
            create => "true",
            perms => mog("700", "tom", "users");
        "/home/tom/self/."
            perms => mog("700", "tom", "users");
    users:
        "tom"
            policy => "present",
            description => "Tom",
            home_dir => "/home/tom/",
            group_primary => "users",
            # groups_secondary => { "printers", "webadmin" },
            shell => "/bin/bash";
}

bundle agent tom_repo_init
{
    vars:
        "tom_dir" string => "/home/tom/self";
        "remote_args" slist => {"add origin https://github.com/cf-bottom/self.git"};
    files:
        "/home/tom/self/."
            create => "true",
            perms => mog("700", "tom", "users");
    methods:
        "Init"
            usebundle => git_init("$(tom_dir)");
        "Remote"
            usebundle => git("$(tom_dir)", "remote", @(remote_args));
}

bundle agent tom_update
{
    vars:
        "tom_dir" string => "/home/tom/self";
    classes:
        "tom_exists" expression => isdir("$(tom_dir)");
    methods:
        !tom_exists::
            "Init"
                usebundle => tom_repo_init;
    commands:
        tom_exists::
            "git pull origin master"
                contain => in_tom;
}

bundle agent tom_install
{
    commands:
        "pip3 install -r requirements.txt"
            contain => in_tom;
}

bundle agent tom_run
{
    commands:
        "python3 -m tom --secrets /home/tom/ --log-level info"
            contain => in_tom;
}

bundle agent __main__
{
    methods:
        "Init"
            usebundle => "tom_init";
        "Update"
            usebundle => "tom_update";
        "Install"
            usebundle => "tom_install";
        "Run"
            usebundle => "tom_run";
}
